<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Auto Beep Prank</title>
<style>
  body, html {
    margin: 0; padding: 0; height: 100%;
    background: black;
    overflow: hidden;
  }
  .line {
    position: fixed;
    top: 0;
    bottom: 0;
    width: 2px;
    background: #444;
    opacity: 0.3;
  }
</style>
</head>
<body>

<script>
  const lineCount = 20;
  for(let i = 0; i < lineCount; i++) {
    const line = document.createElement('div');
    line.className = 'line';
    line.style.left = `${(i / lineCount) * 100}%`;
    document.body.appendChild(line);
  }

  const AudioContext = window.AudioContext || window.webkitAudioContext;
  const audioCtx = new AudioContext();

  function playBeep(duration = 150) {
    const oscillator = audioCtx.createOscillator();
    const gainNode = audioCtx.createGain();

    oscillator.type = 'square';
    oscillator.frequency.setValueAtTime(800, audioCtx.currentTime);

    oscillator.connect(gainNode);
    gainNode.connect(audioCtx.destination);

    oscillator.start();

    gainNode.gain.setValueAtTime(1, audioCtx.currentTime);
    gainNode.gain.exponentialRampToValueAtTime(0.001, audioCtx.currentTime + duration / 1000);

    oscillator.stop(audioCtx.currentTime + duration / 1000);
  }

  function continuousBeeps() {
    playBeep(150);
    setTimeout(continuousBeeps, 160);
  }

  // Try to start audio immediately
  if (audioCtx.state === 'suspended') {
    audioCtx.resume().then(() => {
      continuousBeeps();
    });
  } else {
    continuousBeeps();
  }

</script>

</body>
</html>